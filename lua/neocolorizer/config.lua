local M = {}

M.highlights_base = function(colors)
	return {
		Normal = { fg = colors.fg, bg = colors.bg },
		NormalFloat = { fg = colors.fg, bg = colors.bg },
		Comment = { fg = colors.comment, italic = true },
		Constant = { fg = colors.color2 },
		String = { fg = colors.color12 },
		Character = { fg = colors.color3 },
		Number = { fg = colors.color11 },
		Boolean = { fg = colors.color5 },
		Float = { fg = colors.color11 },
		FloatBorder = { fg = colors.white },
		Operator = { fg = colors.color1 },
		Keyword = { fg = colors.color7 },
		Keywords = { fg = colors.color5 },
		Identifier = { fg = colors.color5 },
		Function = { fg = colors.color9 },
		Statement = { fg = colors.color1 },
		Conditional = { fg = colors.color6 },
		Repeat = { fg = colors.color6 },
		Label = { fg = colors.color5 },
		Exception = { fg = colors.color1 },
		PreProc = { fg = colors.color2 },
		Include = { fg = colors.color11 },
		Define = { fg = colors.color1 },
		Title = { fg = colors.color5 },
		Macro = { fg = colors.color1 },
		PreCondit = { fg = colors.color5 },
		Type = { fg = colors.color2 },
		StorageClass = { fg = colors.color6 },
		Structure = { fg = colors.color2 },
		TypeDef = { fg = colors.color7 },
		Special = { fg = colors.nontext, italic = true },
		SpecialComment = { fg = colors.comment, italic = true },
		Error = { fg = colors.color7 },
		Todo = { fg = colors.color1, bold = true, italic = true },
		Underlined = { fg = colors.color5, underline = true },

		Cursor = { reverse = true },
		CursorLineNr = { fg = colors.fg, bold = true },

		SignColumn = { bg = colors.bg },

		Conceal = { fg = colors.comment },
		CursorColumn = { bg = colors.menu },
		CursorLine = { bg = colors.selection },
		ColorColumn = { bg = colors.selection },

		StatusLine = { fg = colors.white, bg = colors.black },
		StatusLineNC = { fg = colors.comment },
		StatusLineTerm = { fg = colors.white, bg = colors.black },
		StatusLineTermNC = { fg = colors.comment },

		Directory = { fg = colors.color5 },
		DiffAdd = { fg = colors.bg, bg = colors.color3 },
		DiffChange = { fg = colors.color11 },
		DiffDelete = { fg = colors.color0 },
		DiffText = { fg = colors.comment },

		ErrorMsg = { fg = colors.color7 },
		VertSplit = { fg = colors.black },
		WinSeparator = { fg = colors.black },
		Folded = { fg = colors.comment },
		FoldColumn = {},
		Search = { fg = colors.black, bg = colors.color11 },
		IncSearch = { fg = colors.color11, bg = colors.comment },
		LineNr = { fg = colors.comment },
		MatchParen = { fg = colors.fg, underline = true },
		NonText = { fg = colors.nontext },
		Pmenu = { fg = colors.white, bg = colors.menu },
		PmenuSel = { fg = colors.white, bg = colors.selection },
		PmenuSbar = { bg = colors.bg },
		PmenuThumb = { bg = colors.selection },

		Question = { fg = colors.color1 },
		QuickFixLine = { fg = colors.black, bg = colors.color2 },
		SpecialKey = { fg = colors.nontext },

		SpellBad = { fg = colors.color7, underline = true },
		SpellCap = { fg = colors.color2 },
		SpellLocal = { fg = colors.color2 },
		SpellRare = { fg = colors.color2 },

		TabLine = { fg = colors.comment },
		TabLineSel = { fg = colors.white },
		TabLineFill = { bg = colors.bg },
		Terminal = { fg = colors.white, bg = colors.black },
		Visual = { bg = colors.selection },
		VisualNOS = { fg = colors.selection },
		WarningMsg = { fg = colors.color2 },
		WildMenu = { fg = colors.black, bg = colors.white },

		EndOfBuffer = endOfBuffer,

		-- TreeSitter
		["@error"] = { fg = colors.color7 },
		["@punctuation.delimiter"] = { fg = colors.comment },
		["@punctuation.bracket"] = { fg = colors.comment },
		["@punctuation"] = { fg = colors.comment },
		["@markup.list"] = { fg = colors.color5 },

		["@constant"] = { fg = colors.color5 },
		["@constant.builtin"] = { fg = colors.color1 },
		["@markup.link.label.symbol"] = { fg = colors.color1 },

		["@constant.macro"] = { fg = colors.color5 },
		["@string.regexp"] = { fg = colors.color0 },
		["@string"] = { fg = colors.color12 },
		["@string.escape"] = { fg = colors.color5 },
		["@string.special.symbol"] = { fg = colors.color1 },
		["@character"] = { fg = colors.color3 },
		["@number"] = { fg = colors.color1 },
		["@boolean"] = { fg = colors.color11 },
		["@number.float"] = { fg = colors.color3 },
		["@annotation"] = { fg = colors.color2 },
		["@attribute"] = { fg = colors.color5 },
		["@module"] = { fg = colors.color11 },

		["@function.builtin"] = { fg = colors.color5 },
		["@function"] = { fg = colors.color3 },
		["@function.macro"] = { fg = colors.color3 },
		["@variable.parameter"] = { fg = colors.color13 },
		["@variable.parameter.reference"] = { fg = colors.color13 },
		["@function.method"] = { fg = colors.color3 },
		["@variable.member"] = { fg = colors.color5 },
		["@property"] = { fg = colors.color5 },
		["@constructor"] = { fg = colors.fg },

		["@keyword.conditional"] = { fg = colors.color6 },
		["@keyword.repeat"] = { fg = colors.color6 },
		["@label"] = { fg = colors.color5 },

		["@keyword"] = { fg = colors.color7 },
		["@keyword.function"] = { fg = colors.color6 },
		["@keyword.function.ruby"] = { fg = colors.color6 },
		["@keyword.operator"] = { fg = colors.color6 },
		["@operator"] = { fg = colors.color1 },
		["@keyword.exception"] = { fg = colors.color1 },
		["@type"] = { fg = colors.color12 },
		["@type.builtin"] = { fg = colors.color5, italic = true },
		["@type.qualifier"] = { fg = colors.color6 },
		["@structure"] = { fg = colors.color1 },
		["@keyword.include"] = { fg = colors.color6 },

		["@variable"] = { fg = colors.color13 },
		["@variable.builtin"] = { fg = colors.color5 },

		["@markup"] = { fg = colors.color11 },
		["@markup.strong"] = { fg = colors.color11, bold = true }, -- bold
		["@markup.emphasis"] = { fg = colors.color2, italic = true }, -- italic
		["@markup.underline"] = { fg = colors.color11 },
		["@markup.heading"] = { fg = colors.color6, bold = true }, -- title
		["@markup.raw"] = { fg = colors.color2 }, -- inline code
		["@markup.link.url"] = { fg = colors.color2, italic = true }, -- urls
		["@markup.link"] = { fg = colors.color11, bold = true },

		["@tag"] = { fg = colors.color5 },
		["@tag.attribute"] = { fg = colors.color3 },
		["@tag.delimiter"] = { fg = colors.color5 },

		-- Semantic
		["@class"] = { fg = colors.color5 },
		["@struct"] = { fg = colors.color5 },
		["@enum"] = { fg = colors.color5 },
		["@enumMember"] = { fg = colors.color1 },
		["@event"] = { fg = colors.color5 },
		["@interface"] = { fg = colors.color5 },
		["@modifier"] = { fg = colors.color5 },
		["@regexp"] = { fg = colors.color2 },
		["@typeParameter"] = { fg = colors.color5 },
		["@decorator"] = { fg = colors.color5 },

		-- LSP Semantic (0.9+)
		["@lsp.type.class"] = { fg = colors.color5 },
		["@lsp.type.enum"] = { fg = colors.color5 },
		["@lsp.type.decorator"] = { fg = colors.color3 },
		["@lsp.type.enumMember"] = { fg = colors.color1 },
		["@lsp.type.function"] = { fg = colors.color3 },
		["@lsp.type.interface"] = { fg = colors.color5 },
		["@lsp.type.macro"] = { fg = colors.color5 },
		["@lsp.type.method"] = { fg = colors.color3 },
		["@lsp.type.namespace"] = { fg = colors.color11 },
		["@lsp.type.parameter"] = { fg = colors.color13 },
		["@lsp.type.property"] = { fg = colors.color5 },
		["@lsp.type.struct"] = { fg = colors.color5 },
		["@lsp.type.type"] = { fg = colors.color12 },
		["@lsp.type.variable"] = { fg = colors.fg },

		-- HTML
		htmlArg = { fg = colors.color3 },
		htmlBold = { fg = colors.color2, bold = true },
		htmlEndTag = { fg = colors.color5 },
		htmlH1 = { fg = colors.color6 },
		htmlH2 = { fg = colors.color6 },
		htmlH3 = { fg = colors.color6 },
		htmlH4 = { fg = colors.color6 },
		htmlH5 = { fg = colors.color6 },
		htmlH6 = { fg = colors.color6 },
		htmlItalic = { fg = colors.color1, italic = true },
		htmlLink = { fg = colors.color1, underline = true },
		htmlSpecialChar = { fg = colors.color2 },
		htmlSpecialTagName = { fg = colors.color5 },
		htmlTag = { fg = colors.color5 },
		htmlTagN = { fg = colors.color5 },
		htmlTagName = { fg = colors.color5 },
		htmlTitle = { fg = colors.white },

		-- Markdown
		markdownBlockquote = { fg = colors.color2, italic = true },
		markdownBold = { fg = colors.color11, bold = true },
		markdownCode = { fg = colors.color3 },
		markdownCodeBlock = { fg = colors.color11 },
		markdownCodeDelimiter = { fg = colors.color0 },
		markdownH2 = { link = "rainbow2" },
		markdownH1 = { link = "rainbow1" },
		markdownH3 = { link = "rainbow3" },
		markdownH4 = { link = "rainbow4" },
		markdownH5 = { link = "rainbow5" },
		markdownH6 = { link = "rainbow6" },
		markdownHeadingDelimiter = { fg = colors.color0 },
		markdownHeadingRule = { fg = colors.comment },
		markdownId = { fg = colors.color1 },
		markdownIdDeclaration = { fg = colors.color5 },
		markdownIdDelimiter = { fg = colors.color1 },
		markdownItalic = { fg = colors.color2, italic = true },
		markdownLinkDelimiter = { fg = colors.color1 },
		markdownLinkText = { fg = colors.color6 },
		markdownListMarker = { fg = colors.color5 },
		markdownOrderedListMarker = { fg = colors.color0 },
		markdownRule = { fg = colors.comment },
		["@markup.heading.1.markdown"] = { link = "rainbowcol1" },
		["@markup.heading.2.markdown"] = { link = "rainbowcol2" },
		["@markup.heading.3.markdown"] = { link = "rainbowcol3" },
		["@markup.heading.4.markdown"] = { link = "rainbowcol4" },
		["@markup.heading.5.markdown"] = { link = "rainbowcol5" },
		["@markup.heading.6.markdown"] = { link = "rainbowcol6" },

		--  Diff
		diffAdded = { fg = colors.color3 },
		diffRemoved = { fg = colors.color0 },
		diffFileId = { fg = colors.color2, bold = true, reverse = true },
		diffFile = { fg = colors.nontext },
		diffNewFile = { fg = colors.color3 },
		diffOldFile = { fg = colors.color0 },

		debugPc = { bg = colors.menu },
		debugBreakpoint = { fg = colors.color0, reverse = true },

		-- Git Signs
		GitSignsAdd = { fg = colors.color8 },
		GitSignsChange = { fg = colors.color5 },
		GitSignsDelete = { fg = colors.color7 },
		GitSignsAddLn = { fg = colors.black, bg = colors.color8 },
		GitSignsChangeLn = { fg = colors.black, bg = colors.color5 },
		GitSignsDeleteLn = { fg = colors.black, bg = colors.color7 },
		GitSignsCurrentLineBlame = { fg = colors.white },

		-- Telescope
		TelescopePromptBorder = { fg = colors.comment },
		TelescopeResultsBorder = { fg = colors.comment },
		TelescopePreviewBorder = { fg = colors.comment },
		TelescopeSelection = { fg = colors.white, bg = colors.selection },
		TelescopeMultiSelection = { fg = colors.color1, bg = colors.selection },
		TelescopeNormal = { fg = colors.fg, bg = colors.bg },
		TelescopeMatching = { fg = colors.color3 },
		TelescopePromptPrefix = { fg = colors.color1 },
		TelescopeResultsDiffDelete = { fg = colors.color0 },
		TelescopeResultsDiffChange = { fg = colors.color5 },
		TelescopeResultsDiffAdd = { fg = colors.color3 },

		-- Flash
		FlashLabel = { bg = colors.color0, fg = colors.color13 },

		-- NvimTree
		NvimTreeNormal = { fg = colors.fg, bg = colors.menu },
		NvimTreeVertSplit = { fg = colors.bg, bg = colors.bg },
		NvimTreeRootFolder = { fg = colors.fg, bold = true },
		NvimTreeGitDirty = { fg = colors.color2 },
		NvimTreeGitNew = { fg = colors.color8 },
		NvimTreeImageFile = { fg = colors.color6 },
		NvimTreeFolderIcon = { fg = colors.color1 },
		NvimTreeIndentMarker = { fg = colors.nontext },
		NvimTreeEmptyFolderName = { fg = colors.comment },
		NvimTreeFolderName = { fg = colors.fg },
		NvimTreeSpecialFile = { fg = colors.color6, underline = true },
		NvimTreeOpenedFolderName = { fg = colors.fg },
		NvimTreeCursorLine = { bg = colors.selection },
		NvimTreeIn = { bg = colors.selection },

		--NvimTreeEndOfBuffer = endOfBuffer,

		-- NeoTree
		NeoTreeNormal = { fg = colors.fg, bg = colors.menu },
		NeoTreeNormalNC = { fg = colors.fg, bg = colors.menu },
		NeoTreeDirectoryName = { fg = colors.fg },
		NeoTreeGitUnstaged = { fg = colors.color11 },
		NeoTreeGitModified = { fg = colors.color11 },
		NeoTreeGitUntracked = { fg = colors.color8 },
		NeoTreeDirectoryIcon = { fg = colors.color1 },
		NeoTreeIndentMarker = { fg = colors.nontext },
		NeoTreeDotfile = { fg = colors.comment },

		-- Bufferline
		BufferLineIndicatorSelected = { fg = colors.color1 },
		BufferLineFill = { bg = colors.black },
		BufferLineBufferSelected = { bg = colors.bg },
		BufferLineSeparator = { fg = colors.black },

		-- LSP
		DiagnosticError = { fg = colors.color0 },
		DiagnosticWarn = { fg = colors.color2 },
		DiagnosticInfo = { fg = colors.color5 },
		DiagnosticHint = { fg = colors.color5 },
		DiagnosticUnderlineError = { undercurl = true, sp = colors.color0 },
		DiagnosticUnderlineWarn = { undercurl = true, sp = colors.color2 },
		DiagnosticUnderlineInfo = { undercurl = true, sp = colors.color5 },
		DiagnosticUnderlineHint = { undercurl = true, sp = colors.color5 },
		DiagnosticSignError = { fg = colors.color0 },
		DiagnosticSignWarn = { fg = colors.color2 },
		DiagnosticSignInfo = { fg = colors.color5 },
		DiagnosticSignHint = { fg = colors.color5 },
		DiagnosticFloatingError = { fg = colors.color0 },
		DiagnosticFloatingWarn = { fg = colors.color2 },
		DiagnosticFloatingInfo = { fg = colors.color5 },
		DiagnosticFloatingHint = { fg = colors.color5 },
		DiagnosticVirtualTextError = { fg = colors.color0 },
		DiagnosticVirtualTextWarn = { fg = colors.color2 },
		DiagnosticVirtualTextInfo = { fg = colors.color5 },
		DiagnosticVirtualTextHint = { fg = colors.color5 },

		LspDiagnosticsDefaultError = { fg = colors.color0 },
		LspDiagnosticsDefaultWarning = { fg = colors.color2 },
		LspDiagnosticsDefaultInformation = { fg = colors.color5 },
		LspDiagnosticsDefaultHint = { fg = colors.color5 },
		LspDiagnosticsUnderlineError = { fg = colors.color0, undercurl = true },
		LspDiagnosticsUnderlineWarning = { fg = colors.color2, undercurl = true },
		LspDiagnosticsUnderlineInformation = { fg = colors.color5, undercurl = true },
		LspDiagnosticsUnderlineHint = { fg = colors.color5, undercurl = true },
		LspReferenceText = { fg = colors.color11 },
		LspReferenceRead = { fg = colors.color11 },
		LspReferenceWrite = { fg = colors.color11 },
		LspCodeLens = { fg = colors.color5 },
		LspInlayHint = { fg = "#969696", bg = "#2f3146" },

		--LSP Saga
		LspFloatWinNormal = { fg = colors.fg },
		LspFloatWinBorder = { fg = colors.comment },
		LspSagaHoverBorder = { fg = colors.comment },
		LspSagaSignatureHelpBorder = { fg = colors.comment },
		LspSagaCodeActionBorder = { fg = colors.comment },
		LspSagaDefPreviewBorder = { fg = colors.comment },
		LspLinesDiagBorder = { fg = colors.comment },
		LspSagaRenameBorder = { fg = colors.comment },
		LspSagaBorderTitle = { fg = colors.menu },
		LSPSagaDiagnosticTruncateLine = { fg = colors.comment },
		LspSagaDiagnosticBorder = { fg = colors.comment },
		LspSagaShTruncateLine = { fg = colors.comment },
		LspSagaDocTruncateLine = { fg = colors.comment },
		LspSagaLspFinderBorder = { fg = colors.comment },
		CodeActionNumber = { bg = "NONE", fg = colors.color5 },

		-- IndentBlankLine
		IndentBlanklineContextChar = { fg = colors.color7, nocombine = true },

		-- Nvim compe
		CmpItemAbbrDeprecated = { fg = colors.white, bg = colors.bg },
		CmpItemAbbrMatch = { fg = colors.color5, bg = colors.bg },

		-- barbar
		BufferVisibleTarget = { fg = colors.color0 },
		BufferTabpages = { fg = colors.nontext, bg = colors.black, bold = true },
		BufferTabpageFill = { fg = colors.nontext, bg = colors.black },
		BufferCurrentSign = { fg = colors.color1 },
		BufferCurrentTarget = { fg = colors.color0 },
		BufferInactive = { fg = colors.comment, bg = colors.black, italic = true },
		BufferInactiveIndex = { fg = colors.nontext, bg = colors.black, italic = true },
		BufferInactiveMod = { fg = colors.color2, bg = colors.black, italic = true },
		BufferInactiveSign = { fg = colors.nontext, bg = colors.black, italic = true },
		BufferInactiveTarget = { fg = colors.color0, bg = colors.black, bold = true },

		-- Compe
		CompeDocumentation = { link = "Pmenu" },
		CompeDocumentationBorder = { link = "Pmenu" },

		-- Cmp
		CmpItemAbbr = { fg = colors.white, bg = colors.bg },
		CmpItemKind = { fg = colors.white, bg = colors.bg },
		CmpItemKindMethod = { link = "@function.method" },
		CmpItemKindText = { link = "@markup" },
		CmpItemKindFunction = { link = "@function" },
		CmpItemKindConstructor = { link = "@type" },
		CmpItemKindVariable = { link = "@variable" },
		CmpItemKindClass = { link = "@type" },
		CmpItemKindInterface = { link = "@type" },
		CmpItemKindModule = { link = "@module" },
		CmpItemKindProperty = { link = "@property" },
		CmpItemKindOperator = { link = "@operator" },
		CmpItemKindReference = { link = "@variable.parameter.reference" },
		CmpItemKindUnit = { link = "@variable.member" },
		CmpItemKindValue = { link = "@variable.member" },
		CmpItemKindField = { link = "@variable.member" },
		CmpItemKindEnum = { link = "@variable.member" },
		CmpItemKindKeyword = { link = "@keyword" },
		CmpItemKindSnippet = { link = "@markup" },
		CmpItemKindColor = { link = "DevIconCss" },
		CmpItemKindFile = { link = "TSURI" },
		CmpItemKindFolder = { link = "TSURI" },
		CmpItemKindEvent = { link = "@constant" },
		CmpItemKindEnumMember = { link = "@variable.member" },
		CmpItemKindConstant = { link = "@constant" },
		CmpItemKindStruct = { link = "@structure" },
		CmpItemKindTypeParameter = { link = "@variable.parameter" },

		-- navic
		NavicIconsFile = { link = "CmpItemKindFile" },
		NavicIconsModule = { link = "CmpItemKindModule" },
		NavicIconsNamespace = { link = "CmpItemKindModule" },
		NavicIconsPackage = { link = "CmpItemKindModule" },
		NavicIconsClass = { link = "CmpItemKindClass" },
		NavicIconsMethod = { link = "CmpItemKindMethod" },
		NavicIconsProperty = { link = "CmpItemKindProperty" },
		NavicIconsField = { link = "CmpItemKindField" },
		NavicIconsConstructor = { link = "CmpItemKindConstructor" },
		NavicIconsEnum = { link = "CmpItemKindEnum" },
		NavicIconsInterface = { link = "CmpItemKindInterface" },
		NavicIconsFunction = { link = "CmpItemKindFunction" },
		NavicIconsVariable = { link = "CmpItemKindVariable" },
		NavicIconsConstant = { link = "CmpItemKindConstant" },
		NavicIconsString = { link = "String" },
		NavicIconsNumber = { link = "Number" },
		NavicIconsBoolean = { link = "Boolean" },
		NavicIconsArray = { link = "CmpItemKindClass" },
		NavicIconsObject = { link = "CmpItemKindClass" },
		NavicIconsKey = { link = "CmpItemKindKeyword" },
		NavicIconsKeyword = { link = "CmpItemKindKeyword" },
		NavicIconsNull = { fg = "blue" },
		NavicIconsEnumMember = { link = "CmpItemKindEnumMember" },
		NavicIconsStruct = { link = "CmpItemKindStruct" },
		NavicIconsEvent = { link = "CmpItemKindEvent" },
		NavicIconsOperator = { link = "CmpItemKindOperator" },
		NavicIconsTypeParameter = { link = "CmpItemKindTypeParameter" },
		NavicText = { fg = "gray" },
		NavicSeparator = { fg = "gray" },

		-- TS rainbow colors
		rainbowcol1 = { fg = colors.fg },
		rainbowcol2 = { fg = colors.color6 },
		rainbowcol3 = { fg = colors.color5 },
		rainbowcol4 = { fg = colors.color3 },
		rainbowcol5 = { fg = colors.color1 },
		rainbowcol6 = { fg = colors.color11 },
		rainbowcol7 = { fg = colors.fg },

		-- Rainbow delimiter
		RainbowDelimiterRed = { fg = colors.fg },
		RainbowDelimiterYellow = { fg = colors.color6 },
		RainbowDelimiterBlue = { fg = colors.color5 },
		RainbowDelimiterOrange = { fg = colors.color3 },
		RainbowDelimiterGreen = { fg = colors.color1 },
		RainbowDelimiterViolet = { fg = colors.color11 },
		RainbowDelimiterCyan = { fg = colors.fg },

		-- mini.indentscope
		MiniIndentscopeSymbol = { fg = "#B5629B" },
		MiniIndentscopeSymbolOff = { fg = "#B5629B" },

		-- mini.icons
		MiniIconsAzure = { fg = colors.color12 },
		MiniIconsBlue = { fg = colors.color10 },
		MiniIconsCyan = { fg = colors.color5 },
		MiniIconsGrey = { fg = colors.white },
		MiniIconsOrange = { fg = colors.color11 },
		MiniIconsPurple = { fg = colors.color1 },
		MiniIconsRed = { fg = colors.color0 },
		MiniIconsYellow = { fg = colors.color2 },

		-- goolord/alpha-nvim
		AlphaHeader = { fg = colors.color1 },
		AlphaButtons = { fg = colors.color5 },
		AlphaShortcut = { fg = colors.color11 },
		AlphaFooter = { fg = colors.color1, italic = true },

		-- nvimdev/dashboard-nvim
		DashboardShortCut = { fg = colors.color5 },
		DashboardHeader = { fg = colors.color1 },
		DashboardCenter = { fg = colors.fg },
		DashboardFooter = { fg = colors.color1, italic = true },
		DashboardKey = { fg = colors.color11 },
		DashboardDesc = { fg = colors.color5 },
		DashboardIcon = { fg = colors.color5, bold = true },

		-- dap UI
		DapUIPlayPause = { fg = colors.color8 },
		DapUIRestart = { fg = colors.color3 },
		DapUIStop = { fg = colors.color0 },
		DapUIStepOver = { fg = colors.color5 },
		DapUIStepInto = { fg = colors.color5 },
		DapUIStepOut = { fg = colors.color5 },
		DapUIStepBack = { fg = colors.color5 },
		DapUIType = { fg = colors.color10 },
		DapUIScope = { fg = colors.color12 },
		DapUIModifiedValue = { fg = colors.color12, bold = true },
		DapUIDecoration = { fg = colors.color12 },
		DapUIThread = { fg = colors.color8 },
		DapUIStoppedThread = { fg = colors.color12 },
		DapUISource = { fg = colors.color10 },
		DapUILineNumber = { fg = colors.color12 },
		DapUIFloatBorder = { fg = colors.color12 },
		DapUIWatchesEmpty = { fg = colors.color6 },
		DapUIWatchesValue = { fg = colors.color8 },
		DapUIWatchesError = { fg = colors.color6 },
		DapUIBreakpointsPath = { fg = colors.color12 },
		DapUIBreakpointsInfo = { fg = colors.color8 },
		DapUIBreakpointsCurrentLine = { fg = colors.color8, bold = true },
		DapStoppedLine = { default = true, link = "Visual" },
		DapUIWinSelect = { fg = colors.color12, bold = true },

		-- Notify
		NotifyInfoIcon = { fg = colors.color3 },
		NotifyInfoTitle = { fg = colors.color3 },
		NotifyInfoBorder = { fg = "#2C453F" },
		NotifyErrorIcon = { fg = colors.color0 },
		NotifyErrorTitle = { fg = colors.color0 },
		NotifyErrorBorder = { fg = "#DD6E6B" },
		NotifyWarnIcon = { fg = colors.color11 },
		NotifyWarnTitle = { fg = colors.color11 },
		NotifyWarnBorder = { fg = "#785637" },
	}
end

return M
